<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressText" xml:space="preserve">
    <value> Address</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="BackText" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BuyText" xml:space="preserve">
    <value>Buy </value>
  </data>
  <data name="CartText" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="ChangeText" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="ContactNumberText" xml:space="preserve">
    <value>Contact with number</value>
  </data>
  <data name="DateExpText" xml:space="preserve">
    <value>Date Exp</value>
  </data>
  <data name="DescriptionText" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ImagesTitle" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="JopPositionText" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="MaterialText" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="MoneyText" xml:space="preserve">
    <value>Money need pay</value>
  </data>
  <data name="MoreText" xml:space="preserve">
    <value>View more</value>
  </data>
  <data name="NewText" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NextText" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NumberText" xml:space="preserve">
    <value>Num</value>
  </data>
  <data name="PlaceText" xml:space="preserve">
    <value>Place</value>
  </data>
  <data name="PriceText" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="ProductRelatedText" xml:space="preserve">
    <value>Product Related</value>
  </data>
  <data name="ProductText" xml:space="preserve">
    <value> product</value>
  </data>
  <data name="PromotionText" xml:space="preserve">
    <value>Promotion</value>
  </data>
  <data name="RemoveText" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="SaleText" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="HotText" xml:space="preserve">
    <value>Hot</value>
  </data>

  <data name="ShortText" xml:space="preserve">
    <value>Short</value>
  </data>
  <data name="ShowText" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="TotalText" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="VATText" xml:space="preserve">
    <value>Prices include VAT</value>
  </data>
  <data name="ViewTitle" xml:space="preserve">
    <value>View 360&lt;sup&gt;o&lt;/sup&gt;</value>
  </data>
  <data name="YouLikeText" xml:space="preserve">
    <value>You Like</value>
  </data>
  <data name="YourCartText" xml:space="preserve">
    <value>Your Cart </value>
  </data>
  <data name="VMText" xml:space="preserve">
    <value>View more </value>
  </data>
  <data name="RMText" xml:space="preserve">
    <value>Read more </value>
  </data>
  <data name="LNText" xml:space="preserve">
    <value>Latest News </value>
  </data>
  <data name="ContactUsText" xml:space="preserve">
    <value>Contact us</value>
  </data>
  
  <data name="DescriptionText" xml:space="preserve">
    <value> Description</value>
  </data>
  <data name="ManualText" xml:space="preserve">
    <value> Manual</value>
  </data>
  <data name="CommentsText" xml:space="preserve">
    <value>Commments</value>
  </data>
  <data name="RelatedProductText" xml:space="preserve">
    <value> Related products</value>
  </data>
  <data name="FilterText" xml:space="preserve">
    <value> Filter</value>
  </data>
  <data name="VLText" xml:space="preserve">
    <value> View less</value>
  </data>
  <data name="PPText" xml:space="preserve">
    <value> Production Process </value>
  </data>
  
  <data name="SortText" xml:space="preserve">
    <value> Sort </value>
  </data>
  <data name="ViewText" xml:space="preserve">
    <value> View </value>
  </data>
  <data name="ACartText" xml:space="preserve">
    <value> Add to Cart </value>
  </data>
  <data name="StockText" xml:space="preserve">
    <value> Out of Stock </value>
  </data>
  <data name="ColorText" xml:space="preserve">
    <value> Color </value>
  </data>
  <data name="SizeText" xml:space="preserve">
    <value>Size </value>
  </data>
  <data name="ShareText" xml:space="preserve">
    <value>Share </value>
  </data>
  <data name="PurchaseWith" xml:space="preserve">
    <value>PRODUCTS PURCHASED TOGETHER </value>
  </data>
  <data name="RecentProductText" xml:space="preserve">
    <value>Recently Viewed Products </value>
  </data>
 <data name="OtherProductText" xml:space="preserve">
    <value> Other Products </value>
  </data>
 <data name="YCartText" xml:space="preserve">
    <value> Your cart (  </value>
  </data>

 <data name="YCartText2" xml:space="preserve">
    <value>   products) </value>
  </data>
 <data name="ContinueText" xml:space="preserve">
    <value> Continue </value>
  </data>
 <data name="TotalText" xml:space="preserve">
    <value> Total </value>
  </data>

 <data name="PaymentText" xml:space="preserve">
    <value>Payment  </value>
  </data>
 <data name="DeleteText" xml:space="preserve">
    <value>Delete  </value>
  </data>
 <data name="CartEmptyText" xml:space="preserve">
    <value> Cart empty  </value>
  </data>
 <data name="SCartText" xml:space="preserve">
    <value>   Shopping cart information  </value>
  </data>
 <data name="NameText" xml:space="preserve">
    <value>  Name  </value>
  </data>
 <data name="PhoneText" xml:space="preserve">
    <value>  Phone  </value>
  </data>
 <data name="MailText" xml:space="preserve">
    <value>  Email  </value>
  </data>
 <data name="CityText" xml:space="preserve">
    <value>  Province / city  </value>
  </data>


 <data name="DistrictText" xml:space="preserve">
    <value>   District </value>
  </data>
 <data name="AddressText" xml:space="preserve">
    <value>Address</value>
  </data>
 <data name="NoteText" xml:space="preserve">
    <value>  Note  </value>
  </data>
 <data name="ForeigText" xml:space="preserve">
    <value>  Please indicate if you are a foreigner  </value>
  </data>


 <data name="MoreAddressText" xml:space="preserve">
    <value>  Do you want to ship to another address  </value>
  </data>
 <data name="AddAddressText" xml:space="preserve">
    <value>  Add a shipping	address  </value>
  </data>
 <data name="NameHolder" xml:space="preserve">
    <value> Please enter your full name   </value>
  </data>
 <data name="ShippingMethodText" xml:space="preserve">
    <value> Shipping method  </value>
  </data>
 <data name="PaymentMethodText" xml:space="preserve">
    <value> Payment method  </value>
  </data>
 <data name="CompletedText" xml:space="preserve">
    <value> Completed  </value>
  </data>
   <data name="DiscountGiftText" xml:space="preserve">
    <value> Coupon / Gift code  </value>
  </data>
   <data name="DiscountButtonText" xml:space="preserve">
    <value> Apply </value>
  </data>
   <data name="DiscountNoteText" xml:space="preserve">
    <value> Once applied, the coupon code may not be available for 15 minutes </value>
  </data>
   <data name="MyCartText" xml:space="preserve">
    <value> My cart (</value>
  </data>
   <data name="SubTotalText" xml:space="preserve">
    <value> Subtotal</value>
  </data>
   <data name="DiscountText" xml:space="preserve">
    <value> Discount</value>
  </data>
   <data name="TotalText" xml:space="preserve">
    <value> Total</value>
  </data>
   <data name="TotalShippingText" xml:space="preserve">
    <value> Total delivery</value>
  </data>
   <data name="BusinessNewsText" xml:space="preserve">
    <value> Business news</value>
  </data>
   <data name="MarketNewsText" xml:space="preserve">
    <value> Market news</value>
  </data>
   <data name="RelatedText" xml:space="preserve">
    <value> Related </value>
  </data>
   <data name="CustomerSupportText" xml:space="preserve">
    <value> Customer Support </value>
  </data>
   <data name="ViewAllText" xml:space="preserve">
    <value> View all  </value>
  </data>
   <data name="NumberText" xml:space="preserve">
    <value> Number   </value>
  </data>
   <data name="DocumentNameText" xml:space="preserve">
    <value> Document name   </value>
  </data>
   <data name="DateText" xml:space="preserve">
    <value> Date  </value>
  </data>
   <data name="DownloadText" xml:space="preserve">
    <value> Download   </value>
  </data>
   <data name="AllText" xml:space="preserve">
    <value> All  </value>
  </data>
   <data name="QuantityText" xml:space="preserve">
    <value> Quantity  </value>
  </data>
   <data name="LearnModeText" xml:space="preserve">
    <value> Learn more  </value>
  </data>
   <data name="RelatedServiceText" xml:space="preserve">
    <value>   Related service  </value>
  </data>
   <data name="OtherSoftwareText" xml:space="preserve">
    <value>   Other software  </value>
  </data>
   <data name="OtherNewsText" xml:space="preserve">
    <value>   Other news  </value>
  </data>
   <data name="RelatedJobText" xml:space="preserve">
    <value>    Related Job  </value>
  </data>
     <data name="SampleText1" xml:space="preserve">
    <value>    Apply Now!   </value>
  </data>
     <data name="SampleText2" xml:space="preserve">
    <value>    or   </value>
  </data>
     <data name="SampleText3" xml:space="preserve">
    <value>   UPLOAD YOUR RESUME   </value>
  </data>
     <data name="ViewDetailText" xml:space="preserve">
    <value>   View detail   </value>
  </data>


</root>
